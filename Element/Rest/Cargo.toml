[[bin]]
name = "BinaryRest"
path = "Source/Library.rs"

[[bin]]
name = "Rest"
path = "Source/Library.rs"

[dependencies]
clap = { features = ["derive"], version = "4.5.18" }
walkdir = "2.5.0"
futures = "0.3.30"
rayon = "1.10.0"
tokio = { version = "1.40.0", features = ["full"] }
git2 = { version = "0.19.0" }
num_cpus = "1.16.0"
regex = "1.10.6"
dashmap = "6.1.0"
itertools = "0.13.0"
chrono = "0.4.38"
notify = "6.1.1"
globset = "0.4.15"
tracing = "0.1.40"
tracing-subscriber = "0.3.18"

swc_common = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_common" }
swc_ecma_ast = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_ast" }
swc_ecma_codegen = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_codegen" }
swc_ecma_parser = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_parser" }
swc_ecma_transforms_base = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_transforms_base", features = [
	"concurrent",
] }
swc_ecma_transforms_proposal = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_transforms_proposal" }
swc_ecma_transforms_typescript = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_transforms_typescript" }
swc_ecma_visit = { version = "*", path = "../../Dependency/SWC/Dependency/SWC/crates/swc_ecma_visit" }

serde = "1.0.210"
anyhow = "1.0.89"
serde_json = "1.0.128"

[build-dependencies]
serde = { version = "1.0.210", features = ["derive"] }
toml = "0.8.19"

[lib]
crate-type = ["staticlib", "cdylib", "rlib"]
name = "Library"
path = "Source/Library.rs"

[package]
autobenches = false
autobins = false
autoexamples = false
autotests = false
default-run = "Rest"
description = "⛱️ Rest —"
license = "MIT"
name = "Rest"
repository = "https://github.com/BinaryRest/Rest.git"
version = "0.0.1"
edition = "2021"
include = [
	"Source/**/*",
	"LICENSE",
	"README.md",
	"CHANGELOG.md",
	"build.rs",
	"Cargo.toml",
]
