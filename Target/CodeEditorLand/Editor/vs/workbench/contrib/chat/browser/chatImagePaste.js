var u=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=(e,a,r,t)=>{for(var i=t>1?void 0:t?m(a,r):a,n=e.length-1,o;n>=0;n--)(o=e[n])&&(i=(t?o(a,r,i):o(i))||i);return t&&i&&u(a,r,i),i},c=(e,a)=>(r,t)=>a(r,t,e);import{Codicon as f}from"../../../../base/common/codicons.js";import{Disposable as x}from"../../../../base/common/lifecycle.js";import{IClipboardService as d}from"../../../../platform/clipboard/common/clipboardService.js";import"../common/chatModel.js";import"./chatInputPart.js";import{localize as l}from"../../../../nls.js";import{IConfigurationService as h}from"../../../../platform/configuration/common/configuration.js";let s=class extends x{constructor(r,t,i){super();this.inputPart=r;this.clipboardService=t;this.configurationService=i;this._register(this.inputPart.inputEditor.onDidPaste(n=>{this.configurationService.getValue("chat.experimental.imageAttachments")&&this._handlePaste()}))}async _handlePaste(){const r=await this.clipboardService.readImage();if(!r||!v(r))return;const t=await g(r);if(!t)return;const i=new Set(Array.from(this.inputPart.attachedContext).map(o=>o.id)),n=[];i.has(t.id)||(i.add(t.id),n.push(t)),this.inputPart.attachContext(!1,...n)}};s=p([c(1,d),c(2,h)],s);async function g(e){return{value:e,id:await y(e),name:l("pastedImage","Pasted Image"),isImage:!0,icon:f.fileMedia,isDynamic:!0}}async function y(e){const a=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(a)).map(t=>t.toString(16).padStart(2,"0")).join("")}function v(e){return e.length<4?!1:Object.values({png:[137,80,78,71,13,10,26,10],jpeg:[255,216,255],bmp:[66,77],gif:[71,73,70,56],tiff:[73,73,42,0]}).some(r=>r.every((t,i)=>e[i]===t))}export{s as ChatImageDropAndPaste,y as imageToHash,v as isImage};
